/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&lt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hml: home_row_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <7 21 39 8 9 10 11 13 12 22 23 24 25 26 27 45 43 41 40 42 54 55 56 57 58 44 59 75 74 73 72 38 37 53 69 70 68 7 8 9 10 21 22 23 24 37 38 39 40 41 42 54 55 56 71 72 7 8 9 10 11 12 13 21 22 23 24 25 26 27 37 38 39 40 41 42 43 44 45 53 54 55 56 57 58 59 68 69 70 71 72 73 74 75>;
            flavor = "tap-preferred";
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD_RIGHT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <250>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1             &kp N2        &kp N3           &kp N4               &kp N5   &none                                                                 &mo 3      &kp N6   &kp N7                &kp N8            &kp N9        &kp N0                 &kp MINUS
&kp TAB    &kp Q              &kp W         &kp E            &kp R                &kp T    &none                                                                 &none      &kp Y    &kp U                 &kp I             &kp O         &kp P                  &kp BSLH
&kp ESC    &hml LEFT_SHIFT A  &hml LCTRL S  &hml LEFT_ALT D  &hml LEFT_COMMAND F  &lt 2 G  &none          &kp LCTRL  &kp LALT      &kp RIGHT_COMMAND  &kp RCTRL  &none      &lt 2 H  &hmr RIGHT_COMMAND J  &hmr RIGHT_ALT K  &hmr RCTRL L  &hmr RIGHT_SHIFT SEMI  &kp SQT
&kp LSHFT  &kp Z              &kp X         &kp C            &lt 4 V              &kp B                              &kp HOME      &kp PG_UP                                &kp N    &kp M                 &kp COMMA         &kp DOT       &kp FSLH               &kp RSHFT
&mo 2      &kp GRAVE          &none         &kp LEFT         &kp RIGHT                     &kp BACKSPACE  &kp DEL    &kp END       &kp PG_DN          &kp ENTER  &kp SPACE           &kp DOWN              &kp UP            &kp LBKT      &kp RBKT               &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2        &kp N3    &kp N4     &kp N5  &tog 1                                                           &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W         &kp E     &kp R      &kp T   &none                                                            &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S         &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp RIGHT_COMMAND  &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X         &kp C     &kp V      &kp B                        &kp HOME      &kp PAGE_UP                              &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPSLOCK  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN          &kp ENTER  &kp KP_N0          &kp DOWN    &kp UP        &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3          &kp F4                &kp F5                &kp F6  &tog 1                                      &mo 3   &kp F7    &kp F8          &kp F9           &kp F10           &kp F11            &kp F12
&trans  &trans  &kp C_MUTE      &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &trans  &none                                       &none   &trans    &trans          &trans           &trans            &trans             &trans
&trans  &trans  &kp C_PREVIOUS  &kp C_PLAY_PAUSE      &kp C_NEXT            &trans  &none   &trans  &trans      &trans  &trans  &none   &kp LEFT  &kp DOWN        &kp UP           &kp RIGHT         &trans             &trans
&trans  &trans  &trans          &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans                  &trans      &trans                  &trans    &trans          &kp LESS_THAN    &kp GREATER_THAN  &trans             &trans
&trans  &trans  &kp CAPS        &trans                &trans                        &trans  &trans  &trans      &trans  &trans  &trans            &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &tog 1                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                             &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &tog 5      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none       &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &kp CAPSLOCK  &none         &none                       &none        &none  &none       &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        dev_symbols {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans          &trans           &trans            &trans             &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans          &trans           &trans            &trans             &kp PIPE
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp EQUAL       &kp UNDERSCORE   &kp MINUS         &kp PLUS           &kp DOUBLE_QUOTES
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &kp GRAVE       &kp LESS_THAN    &kp GREATER_THAN  &kp QUESTION       &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
            >;
        };

        gaming {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans         &trans
&trans  &kp A   &kp S   &kp D   &kp F   &kp G   &trans  &trans  &trans      &trans  &trans  &trans  &kp H   &kp J   &kp K   &kp L   &kp SEMICOLON  &trans
&trans  &trans  &trans  &trans  &kp V   &trans                  &trans      &trans                  &trans  &kp M   &trans  &trans  &trans         &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans         &trans
            >;
        };
    };
};
