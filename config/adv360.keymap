/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&lt {
    tapping-term-ms = <275>;
    flavor = "balanced";
    quick-tap-ms = <275>;
    require-prior-idle-ms = <150>;
    hold-trigger-on-release;
};

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hml: home_row_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <275>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <7 21 39 8 9 10 11 13 12 22 23 24 25 26 27 45 43 41 40 42 54 55 56 57 58 44 59 75 74 73 72 38 37 53 69 70 68 7 8 9 10 21 22 23 24 37 38 39 40 41 42 54 55 56 71 72 7 8 9 10 11 12 13 21 22 23 24 25 26 27 37 38 39 40 41 42 43 44 45 53 54 55 56 57 58 59 68 69 70 71 72 73 74 75>;
            flavor = "balanced";
            quick-tap-ms = <275>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD_RIGHT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <275>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67>;
            flavor = "balanced";
            quick-tap-ms = <275>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    macros {
        spaces_left: spaces_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LEFT)>;
            label = "SPACES_LEFT";
        };

        space_right: space_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RIGHT)>;
            label = "SPACE_RIGHT";
        };

        spaces_up: spaces_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(UP)>;
            label = "SPACES_UP";
        };

        space_down: space_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(DOWN)>;
            label = "SPACE_DOWN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1             &kp N2        &kp N3           &kp N4               &kp N5   &none                                                                 &mo 8      &kp N6   &kp N7                &kp N8            &kp N9        &kp N0                 &kp MINUS
&kp TAB    &kp Q              &kp W         &kp E            &kp R                &kp T    &none                                                                 &none      &kp Y    &kp U                 &kp I             &kp O         &kp P                  &kp BSLH
&kp ESC    &hml LEFT_SHIFT A  &hml LCTRL S  &hml LEFT_ALT D  &hml LEFT_COMMAND F  &lt 5 G  &none          &kp LCTRL  &kp LALT      &kp RIGHT_COMMAND  &kp RCTRL  &none      &lt 5 H  &hmr RIGHT_COMMAND J  &hmr RIGHT_ALT K  &hmr RCTRL L  &hmr RIGHT_SHIFT SEMI  &kp SQT
&kp LSHFT  &kp Z              &kp X         &kp C            &lt 3 V              &kp B                              &kp HOME      &kp PG_UP                                &kp N    &kp M                 &kp COMMA         &kp DOT       &kp FSLH               &kp RSHFT
&mo 4      &kp GRAVE          &none         &kp LEFT         &kp RIGHT                     &kp BACKSPACE  &kp DEL    &kp END       &kp PAGE_DOWN      &kp ENTER  &kp SPACE           &kp DOWN              &kp UP            &kp LBKT      &kp RBKT               &mo 4
            >;
        };

        numbers_left {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans        &trans                                                    &trans     &trans          &trans          &trans        &trans           &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &trans                                                    &trans     &kp NUMBER_6    &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9     &kp NUMBER_0  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans         &trans      &trans      &trans  &trans     &trans     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans        &trans
&trans  &trans        &trans        &trans        &trans        &trans                                   &trans      &trans                        &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &trans        &trans
&trans  &trans        &trans        &trans        &trans                      &kp BACKSPACE  &kp DELETE  &trans      &trans  &kp ENTER  &kp SPACE                  &trans          &trans        &trans           &trans        &trans
            >;
        };

        numbers_right {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans        &trans                                                    &trans     &trans        &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &trans                                                    &trans     &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans         &trans      &trans      &trans  &trans     &trans     &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans        &trans        &trans        &trans        &trans                                   &trans      &trans                        &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans        &trans        &trans        &trans                      &kp BACKSPACE  &kp DELETE  &trans      &trans  &kp ENTER  &kp SPACE                &trans        &trans        &trans        &trans        &trans
            >;
        };

        symbols {
            bindings = <
&trans  &trans           &trans       &trans    &trans      &trans       &trans                                                    &trans     &trans          &trans         &trans            &trans                &trans                 &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT  &trans                                                    &trans     &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans           &trans       &trans    &trans      &trans       &trans         &trans      &trans      &trans  &trans     &trans     &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp PIPE               &kp GRAVE
&trans  &trans           &trans       &trans    &trans      &trans                                  &trans      &trans                        &kp UNDERSCORE  &kp PLUS       &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp BACKSLASH          &kp TILDE
&trans  &trans           &trans       &trans    &trans                   &kp BACKSPACE  &kp DELETE  &trans      &trans  &kp ENTER  &kp SPACE                  &trans         &trans            &trans                &trans                 &trans
            >;
        };

        function {
            bindings = <
&kp F1      &kp F2  &kp F3        &kp F4                &kp F5                &kp F6  &tog 7                                                    &trans     &kp F7  &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
&kp F1      &kp F2  &kp F3        &kp F4                &kp F5                &kp F6  &trans                                                    &none      &kp F7  &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
&trans      &trans  &kp C_MUTE    &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &trans  &none          &trans      &trans      &trans  &trans     &none      &trans  &kp C_PP      &kp C_PREV    &kp C_NEXT    &trans        &trans
&bt BT_CLR  &trans  &kp CAPS      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans                             &trans      &trans                        &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans      &trans  &kp CAPSLOCK  &trans                &trans                        &kp BACKSPACE  &kp DELETE  &trans      &trans  &kp ENTER  &kp SPACE          &trans        &trans        &trans        &trans        &trans
            >;
        };

        movement {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                    &trans     &trans        &trans         &trans        &trans        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                    &trans     &spaces_left  &space_down    &spaces_up    &space_right  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans      &trans      &trans  &trans     &trans     &kp LEFT      &kp DOWN       &kp UP_ARROW  &kp RIGHT     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                             &trans      &trans                        &kp HOME      &kp PAGE_DOWN  &kp PAGE_UP   &kp END       &trans  &trans
&trans  &trans  &trans  &trans  &trans          &kp BACKSPACE  &kp DELETE  &trans      &trans  &kp ENTER  &kp SPACE                &trans         &trans        &trans        &trans  &trans
            >;
        };

        macro {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1             &kp N2               &kp N3           &kp N4               &kp N5   &tog 0                                                                        &mo 8        &kp N6   &kp KP_NUM                    &kp KP_EQUAL                &kp KP_DIVIDE             &kp KP_MULTIPLY           &kp MINUS
&kp TAB    &kp Q              &kp W                &kp E            &kp R                &kp T    &none                                                                         &none        &kp Y    &kp KP_N7                     &kp KP_N8                   &kp KP_N9                 &kp KP_MINUS              &kp BSLH
&kp ESC    &hml LEFT_SHIFT A  &hml LEFT_CONTROL S  &hml LEFT_ALT D  &hml LEFT_COMMAND F  &lt 5 G  &none            &kp LCTRL     &kp LALT       &kp RIGHT_COMMAND  &kp RCTRL    &none        &lt 5 H  &hmr RIGHT_COMMAND LS(KP_N4)  &hmr RIGHT_ALT KP_NUMBER_5  &hmr RIGHT_CONTROL KP_N6  &hmr RIGHT_SHIFT KP_PLUS  &kp SQT
&kp LSHFT  &kp Z              &kp X                &kp C            &lt 3 V              &kp B                                   &kp HOME       &kp PAGE_UP                                  &kp N    &lt 5 M                       &kp KP_N2                   &kp KP_N3                 &kp KP_ENTER              &kp RSHFT
&mo 4      &kp GRAVE          &none                &kp LEFT         &kp RIGHT                     &lt 1 BACKSPACE  &lt 3 DELETE  &lt 1 END      &lt 2 PAGE_DOWN    &lt 3 ENTER  &lt 2 SPACE           &kp DOWN                      &kp UP                      &kp KP_DOT                &kp RBKT                  &mo 4
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &tog 7                                                 &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &trans        &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        conditional_macros {
            if-layers = <1 2>;
            then-layer = <6>;
        };
    };
};
